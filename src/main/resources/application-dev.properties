#开发环境
#server.contextPath=/jkzjk

#端口号
server.port=8084

#日志配置
#logging.level.=DEBUG
#打印SQL信息
logging.level.com.huntto.server.dao=debug

#配制日志打印
#logging.config=classpath:logging-config.xml
# 指定日志输入级别
logging.level.com.huntto=INFO
logging.level.org.springframework.web=INFO


# 指定日志输出位置和日志文件名
logging.file=./log/HealthCertificate_log.txt
 
# 文件中输出的格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} = [%thread] = %-5level = %logger{50} - %msg%n

#本地测试反馈Oracle数据库 - 外网
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.datasource.username=jkzjkww
spring.datasource.password=jkzjk
spring.datasource.url=jdbc:oracle:thin:@192.168.22.213:1521:jkzjkww
spring.datasource.driverClassName=oracle.jdbc.OracleDriver

#本地测试反馈MySql数据库
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.url=jdbc:mysql://localhost:3306/test?useOldAliasMetadataBehavior=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8&useOldAliasMetadataBehavior=true
#spring.datasource.driverClassName=com.mysql.jdbc.Driver


#数据源配置 指定数据源
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
#spring.datasource.type=org.apache.commons.dbcp.BasicDataSource
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#连接池配置 数据源配置 指定数据源
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#spring.datasource.dbcp2.max-wait-millis=10000
#spring.datasource.dbcp2.min-idle=5
#spring.datasource.dbcp2.initial-size=5
#spring.datasource.dbcp2.validation-query=SELECT x
#spring.datasource.dbcp2.connection-properties=characterEncoding=utf8

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


#mybatis配置
#配置项：开启下划线到驼峰的自动转换. 作用：将数据库字段根据驼峰规则自动注入到对象属性。
#mybatis.configuration.map-underscore-to-camel-case=true
#使用的数据库配置 如果配置下面的就必须把 DataSourceConfig 的 DatabaseIdProvider bean 注释掉 不然下面的配置不会生效
#而是根据你所连接的数据库自动配置，如果不使用下面的配置，就用 DataSourceConfig 的 DatabaseIdProvider bean 自动配置
#database.type=mysql
#mybatis.configuration.database-id=${database.type}
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

mybatis.mapper-locations=classpath:/mybatis/mapper/*.xml


#安全配置
#Actuator 提供的端点(Endpoints)，默认是需要安全认证才能够被访问的。因为里面涉及到一些敏感的信息。需要安全认证就需要配置 Spring-Security。为了方便首先配置不需要安全权限的
management.security.enabled=false
#启用健康监控
management.health.mail.enabled=true
#shutdown
endpoints.shutdown.enabled=true





